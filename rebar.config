{eunit_opts, [verbose]}.
{eunit_compile_opts, [
    {src_dirs, ["src", "test"]}
  ]}.

{deps, [
   {lfe, {git, "https://github.com/lfe/lfe.git", {tag, "2.0"}}},
   {color, {git, "https://github.com/julianduque/erlang-color.git", {tag, "v1.0.0"}}}
  ]}.

{plugins, [
    {rebar_cmd, "0.2.6"}
]}.

{xref_checks,[
    undefined_function_calls,undefined_functions,locals_not_used,
    deprecated_function_calls,deprecated_functions
]}.

{dialyzer, [
    {warnings, [unknown]}
]}.

{pre_hooks, [
    %% DEBUG:
    %%  {"(linux|darwin|solaris|freebsd|netbsd|openbsd)", compile,
    %%   "echo REBAR_DEPS_DIR = $REBAR_DEPS_DIR"},
    {"(linux|darwin|solaris|freebsd|netbsd|openbsd)", app_compile,
    "$REBAR_DEPS_DIR/lfe/bin/lfe $REBAR_DEPS_DIR/lfe/bin/lfec"
    " -o $REBAR_DEPS_DIR/ltest/ebin"
    " src/*.lfe"}
    %% TODO: Test this on a win32 box
    %%  {"win32", ct,
    %%   "bin/lfe bin/lfec -o $REBAR_DEPS_DIR/ltest/test test/*_SUITE.lfe"}
  ]}.

{profiles, [
   {test, [
      {eunit_opts, [verbose]},
      {erl_opts, [
        {src_dirs, ["src", "test"]}
      ]},
      {pre_hooks, [
        {"(linux|darwin|solaris|freebsd|netbsd|openbsd)", app_compile,
         "$REBAR_DEPS_DIR/lfe/bin/lfe $REBAR_DEPS_DIR/lfe/bin/lfec "
        "-o $REBAR_DEPS_DIR/ltest/ebin "
        "src/*.lfe"},
        {"(linux|darwin|solaris|freebsd|netbsd|openbsd)", app_compile,
        "$REBAR_DEPS_DIR/lfe/bin/lfe $REBAR_DEPS_DIR/lfe/bin/lfec "
        "-o $REBAR_DEPS_DIR/ltest/ebin "
        "test/*.lfe"}
        ]}
   ]},
   {repl, [
      {pre_hooks, [
        {"(linux|darwin|solaris|freebsd|netbsd|openbsd)", app_compile,
         "$REBAR_DEPS_DIR/lfe/bin/lfe $REBAR_DEPS_DIR/lfe/bin/lfec "
        "-o $REBAR_DEPS_DIR/ltest/ebin "
        "src/*.lfe"},
        {"(linux|darwin|solaris|freebsd|netbsd|openbsd)", app_compile,
        "$REBAR_DEPS_DIR/lfe/bin/lfe $REBAR_DEPS_DIR/lfe/bin/lfec "
        "-o $REBAR_DEPS_DIR/ltest/ebin "
        "test/*.lfe"}
        ]},
      {plugins, [
        {rebar3_lfe, {git, "https://github.com/lfe-rebar3/rebar3_lfe.git", {branch, "release/0.3.x"}}}
      ]}
   ]}
]}.

{commands, [
    {ltest, "make check-runner-ltest"}
]}.

{alias, [
    {coverage, [
        {proper, "-c"},
        {cover, "-v --min_coverage=0"}
    ]},
    {check, [
        compile,
        %%xref,
        %%dialyzer,
        eunit,
        %%coverage,
        {cmd, "ltest"}
    ]}
]}.